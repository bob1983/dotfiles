[core]
  excludesfile = ~/.gitignore
  editor = nvim
[user]
  name = bob1983
  email = bob.1983.g@gmail.com
[push]
  default = simple
[filter "lfs"]
  clean = git-lfs clean %f
  smudge = git-lfs smudge %f
  required = true

# Platform specific git config
[include]
  path = ~/.gitconfig.local

[alias]
  st = status
  cm = commit
  fap = fetch --all --prune
  br = branch
  co = checkout
  fp = push --force-with-lease
  cb = rev-parse --abbrev-ref HEAD
  lo = log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'

  modified = ! git diff --name-only --diff-filter=M
  add-modified = add -u
  unstage = reset -q HEAD --
  discard = checkout --
  uncommit = reset --mixed HEAD~
  hard-reset = !git reset --hard "origin/$(git cb)"
  amend = commit --amend --no-edit
  merged = !git branch --merged | grep -vE '^\\*|develop$|development$|master$'
  delete = branch --delete
  delete-merged = !git merged | xargs git delete
  update-all = !git stash && git fap && git co development && git pull --rebase && git co master && git pull --rebase
  update-branch = !git branch -m
  push-upstream = !git push -u origin $(git cb)
  delete-tag = tag --delete
  delete-remote-branch = push --delete origin
  delete-remote-tag = push --delete origin
  sync-tag = !git tag -l | xargs git delete-tag && git fetch origin --tags

  change = "!f() { git stash; git checkout $1; git pull --rebase; git stash pop }; f"
  # git rebase-onto <to> <from>
  rebase-onto = "!f() { git rebase --onto $1 $2 $(git cb); }; f"

[commit]
  template = ~/.stCommitMsg
[ghq]
  root = ~/src
[hub]
  protocol = https

# diff and merge
[merge]
  tool = vimdiff
[mergetool]
  prompt = true
[mergetool "vimdiff"]
  cmd = nvim -d $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'
[difftool]
  prompt = false
[diff]
  tool = vimdiff

# diff-so-fancy setting
[color]
  ui = true
[color "diff-highlight"]
  oldNormal = red bold
  oldHighlight = red bold 52
  newNormal = green bold
  newHighlight = green bold 22
[color "diff"]
  meta = yellow
  frag = magenta bold
  commit = yellow bold
  old = red bold
  new = green bold
  whitespace = red reverse

# Make gitconfig space 2
[filter "spacify"]
  clean = expand --tabs=2 --initial
